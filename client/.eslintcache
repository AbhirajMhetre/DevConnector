[{"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/index.js":"1","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/App.js":"2","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Navbar.js":"3","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Landing.js":"4","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/auth/Register.js":"5","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/auth/Login.js":"6","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/store.js":"7","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/index.js":"8","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/alert.js":"9","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/types.js":"10","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/auth.js":"11","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/alert.js":"12","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/utils/setAuthToken.js":"13","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/auth.js":"14","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/Dashboard.js":"15","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Alert.js":"16","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/routing/PrivateRoute.js":"17","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/utils/api.js":"18","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/profile.js":"19","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/profile.js":"20","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Spinner.js":"21","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/DashboardActions.js":"22","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/Education.js":"23","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/Experience.js":"24","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/CreateProfile.js":"25","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/EditProfile.js":"26","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/AddExperience.js":"27","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/AddEducation.js":"28","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profiles/Profiles.js":"29","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profiles/ProfileItem.js":"30","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/Profile.js":"31","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileTop.js":"32","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileAbout.js":"33","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileExperience.js":"34","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileEducation.js":"35","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileGithub.js":"36","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/post.js":"37","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/posts/Posts.js":"38","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/post.js":"39","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/posts/PostForm.js":"40","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/posts/PostItem.js":"41","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/post/Post.js":"42","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/post/CommentItem.js":"43","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/post/CommentForm.js":"44"},{"size":199,"mtime":1607367545739,"results":"45","hashOfConfig":"46"},{"size":2467,"mtime":1610204157117,"results":"47","hashOfConfig":"46"},{"size":1514,"mtime":1607796105479,"results":"48","hashOfConfig":"46"},{"size":1069,"mtime":1610087382333,"results":"49","hashOfConfig":"46"},{"size":2723,"mtime":1607766864049,"results":"50","hashOfConfig":"46"},{"size":1862,"mtime":1610257608390,"results":"51","hashOfConfig":"46"},{"size":1460,"mtime":1609222302312,"results":"52","hashOfConfig":"46"},{"size":229,"mtime":1610207342872,"results":"53","hashOfConfig":"46"},{"size":394,"mtime":1609220246100,"results":"54","hashOfConfig":"46"},{"size":1055,"mtime":1610258201691,"results":"55","hashOfConfig":"46"},{"size":1995,"mtime":1610088779155,"results":"56","hashOfConfig":"46"},{"size":341,"mtime":1607437644902,"results":"57","hashOfConfig":"46"},{"size":650,"mtime":1610045213953,"results":"58","hashOfConfig":"46"},{"size":1396,"mtime":1610126385528,"results":"59","hashOfConfig":"46"},{"size":1921,"mtime":1610088670984,"results":"60","hashOfConfig":"46"},{"size":438,"mtime":1607840915574,"results":"61","hashOfConfig":"46"},{"size":652,"mtime":1607839623165,"results":"62","hashOfConfig":"46"},{"size":606,"mtime":1609222884533,"results":"63","hashOfConfig":"46"},{"size":5466,"mtime":1610258393356,"results":"64","hashOfConfig":"46"},{"size":961,"mtime":1610258380617,"results":"65","hashOfConfig":"46"},{"size":257,"mtime":1610131671765,"results":"66","hashOfConfig":"46"},{"size":636,"mtime":1610088899499,"results":"67","hashOfConfig":"46"},{"size":1418,"mtime":1610125639197,"results":"68","hashOfConfig":"46"},{"size":1432,"mtime":1610125661222,"results":"69","hashOfConfig":"46"},{"size":6212,"mtime":1610090710393,"results":"70","hashOfConfig":"46"},{"size":7963,"mtime":1610113884195,"results":"71","hashOfConfig":"46"},{"size":3447,"mtime":1610131498279,"results":"72","hashOfConfig":"46"},{"size":3502,"mtime":1610131521694,"results":"73","hashOfConfig":"46"},{"size":1292,"mtime":1610129580298,"results":"74","hashOfConfig":"46"},{"size":972,"mtime":1610129597578,"results":"75","hashOfConfig":"46"},{"size":2911,"mtime":1610132358594,"results":"76","hashOfConfig":"46"},{"size":1821,"mtime":1610133734819,"results":"77","hashOfConfig":"46"},{"size":752,"mtime":1610132496272,"results":"78","hashOfConfig":"46"},{"size":769,"mtime":1610133796748,"results":"79","hashOfConfig":"46"},{"size":776,"mtime":1610133930901,"results":"80","hashOfConfig":"46"},{"size":1698,"mtime":1610136716200,"results":"81","hashOfConfig":"46"},{"size":1750,"mtime":1610206467961,"results":"82","hashOfConfig":"46"},{"size":1018,"mtime":1610196429064,"results":"83","hashOfConfig":"46"},{"size":3523,"mtime":1610212227317,"results":"84","hashOfConfig":"46"},{"size":988,"mtime":1610199583539,"results":"85","hashOfConfig":"46"},{"size":2328,"mtime":1610199550357,"results":"86","hashOfConfig":"46"},{"size":1194,"mtime":1610203334510,"results":"87","hashOfConfig":"46"},{"size":1308,"mtime":1610203414284,"results":"88","hashOfConfig":"46"},{"size":1030,"mtime":1610203376120,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"jwqaiv",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/index.js",[],["185","186"],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/App.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Navbar.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Landing.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/auth/Register.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/auth/Login.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/store.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/index.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/alert.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/types.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/auth.js",["187"],"import api from '../utils/api';\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if(localStorage.token){\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password});\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    \n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//logout / clear profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n}","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/alert.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/utils/setAuthToken.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/auth.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/Dashboard.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Alert.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/routing/PrivateRoute.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/utils/api.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/profile.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/profile.js",["188"],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/layout/Spinner.js",["189"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/DashboardActions.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/Education.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/dashboard/Experience.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/EditProfile.js",["190"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Edit Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Add some changes to your profile\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProfile, getCurrentProfile }\n)(withRouter(EditProfile));","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/AddExperience.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile-forms/AddEducation.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profiles/Profiles.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profiles/ProfileItem.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/Profile.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileTop.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileAbout.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileExperience.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileEducation.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/profile/ProfileGithub.js",["191"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map(repo => (\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGithubRepos }\n)(ProfileGithub);","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/reducers/post.js",["192"],"import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n  } from '../actions/types';\n  \n  const initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n  };\n  \n  export default function(state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case GET_POSTS:\n        return {\n          ...state,\n          posts: payload,\n          loading: false\n        };\n      case GET_POST:\n        return {\n          ...state,\n          post: payload,\n          loading: false\n        };\n      case ADD_POST:\n        return {\n          ...state,\n          posts: [payload, ...state.posts],\n          loading: false\n        };\n      case DELETE_POST:\n        return {\n          ...state,\n          posts: state.posts.filter(post => post._id !== payload),\n          loading: false\n        };\n      case POST_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      case UPDATE_LIKES:\n        return {\n          ...state,\n          posts: state.posts.map(post =>\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\n          ),\n          loading: false\n        };\n      case ADD_COMMENT:\n        return {\n          ...state,\n          post: { ...state.post, comments: payload },\n          loading: false\n        };\n      case REMOVE_COMMENT:\n        return {\n          ...state,\n          post: {\n            ...state.post,\n            comments: state.post.comments.filter(\n              comment => comment._id !== payload\n            )\n          },\n          loading: false\n        };\n      default:\n        return state;\n    }\n  }","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/posts/Posts.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/post.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/posts/PostForm.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/posts/PostItem.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/post/Post.js",["193"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        {post.comments.map(comment => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPost }\n)(Post);","/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/post/CommentItem.js",[],"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/post/CommentForm.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":11},{"ruleId":"202","severity":1,"message":"203","line":19,"column":1,"nodeType":"204","endLine":64,"endColumn":2},{"ruleId":"202","severity":1,"message":"205","line":4,"column":1,"nodeType":"204","endLine":12,"endColumn":3},{"ruleId":"206","severity":1,"message":"207","line":48,"column":6,"nodeType":"208","endLine":48,"endColumn":34,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"210","line":10,"column":6,"nodeType":"208","endLine":10,"endColumn":22,"suggestions":"211"},{"ruleId":"202","severity":1,"message":"203","line":19,"column":3,"nodeType":"204","endLine":81,"endColumn":4},{"ruleId":"206","severity":1,"message":"212","line":14,"column":6,"nodeType":"208","endLine":14,"endColumn":15,"suggestions":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["216"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"225","text":"226"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"227","text":"228"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"229","text":"230"},[1650,1678],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[335,351],"[getGithubRepos, username]",[511,520],"[getPost, match.params.id]"]