{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/users', formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n\nexport const login = (email, password) => async dispatch => {\n  const body = {\n    email,\n    password\n  };\n\n  try {\n    const res = await api.post('/auth', body);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Logout\n\nexport const logout = () => ({\n  type: LOGOUT\n});","map":{"version":3,"sources":["/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","loadUser","dispatch","res","api","get","type","payload","data","err","register","formData","post","errors","response","forEach","error","msg","login","email","password","body","LOGIN_SUCCESS","LOGIN_FAIL","logout","LOGOUT"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP,C,CAOA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,GAAG,CAACC,GAAJ,CAAQ,OAAR,CAAlB;AAEAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP,WADC;AAEPQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGD;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMU,QAAQ,GAAGC,QAAQ,IAAI,MAAMT,QAAN,IAAkB;AACpD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,GAAG,CAACQ,IAAJ,CAAS,QAAT,EAAmBD,QAAnB,CAAlB;AAEAT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,gBADC;AAEPU,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GARD,CAQE,OAAOQ,GAAP,EAAY;AACZ,UAAMI,MAAM,GAAGJ,GAAG,CAACK,QAAJ,CAAaN,IAAb,CAAkBK,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAId,QAAQ,CAACN,QAAQ,CAACoB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDf,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGD;AACF,CApBM,C,CAsBP;;AACA,OAAO,MAAMoB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMlB,QAAN,IAAkB;AAC1D,QAAMmB,IAAI,GAAG;AAAEF,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAb;;AAEA,MAAI;AACF,UAAMjB,GAAG,GAAG,MAAMC,GAAG,CAACQ,IAAJ,CAAS,OAAT,EAAkBS,IAAlB,CAAlB;AAEAnB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEgB,aADC;AAEPf,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAKAN,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GATD,CASE,OAAOQ,GAAP,EAAY;AACZ,UAAMI,MAAM,GAAGJ,GAAG,CAACK,QAAJ,CAAaN,IAAb,CAAkBK,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAId,QAAQ,CAACN,QAAQ,CAACoB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDf,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEiB;AADC,KAAD,CAAR;AAGD;AACF,CAvBM,C,CAyBP;;AACA,OAAO,MAAMC,MAAM,GAAG,OAAO;AAAElB,EAAAA,IAAI,EAAEmB;AAAR,CAAP,CAAf","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get('/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/users', formData);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const body = { email, password };\n\n  try {\n    const res = await api.post('/auth', body);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => ({ type: LOGOUT });"]},"metadata":{},"sourceType":"module"}