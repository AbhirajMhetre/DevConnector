{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), \" Create Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text\",\n          children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          minLength: \"6\",\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          minLength: \"6\",\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"Up14rhCBv3EUumXHUutKA6JFmO0=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/abhirajmhetre/Documents/GitHub/DevConnector/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","setAlert","register","PropTypes","Register","isAuthenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n\n const Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n      });\n\n      const { name, email, password, password2 } = formData;\n\n      const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n      const onSubmit = async (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n          setAlert('Passwords do not match', 'danger');\n        } else {\n          register({ name, email, password });\n        }\n    };\n    if (isAuthenticated) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <Fragment>\n          <h1 className=\"large text-primary\">Sign Up</h1>\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Name\" name=\"name\"\n          value={name}\n          onChange={e => onChange(e)}\n           required />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\"\n                   value={email}\n                   onChange={e => onChange(e)}\n                   required />\n          <small className=\"form-text\"\n            >This site uses Gravatar so if you want a profile image, use a\n            Gravatar email</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            minLength=\"6\"\n            value={password}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"password2\"\n            minLength=\"6\"\n            value={password2}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n        </Fragment>\n      );\n\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);"]},"metadata":{},"sourceType":"module"}